=begin
#BitbarCloud API

#BitbarCloud API.

OpenAPI spec version: 2.100.0
Contact: damian.sniezek@smartbear.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'uri'

module BitbarCloudApiClient
  class DeprecatedApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [nil]
    def get_cluster_logs_using_get(device_session_id, opts = {})
      get_cluster_logs_using_get_with_http_info(device_session_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_cluster_logs_using_get_with_http_info(device_session_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_cluster_logs_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_cluster_logs_using_get"
      end
      # resource path
      local_var_path = '/api/v2/device-sessions/{deviceSessionId}/cluster-logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'projectId'] = opts[:'project_id'] if !opts[:'project_id'].nil?
      query_params[:'testRunId'] = opts[:'test_run_id'] if !opts[:'test_run_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_cluster_logs_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_cluster_logs_using_get1(device_session_id, run_id, opts = {})
      get_cluster_logs_using_get1_with_http_info(device_session_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_cluster_logs_using_get1_with_http_info(device_session_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_cluster_logs_using_get1 ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_cluster_logs_using_get1"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_cluster_logs_using_get1"
      end
      # resource path
      local_var_path = '/api/v2/runs/{runId}/device-sessions/{deviceSessionId}/cluster-logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_cluster_logs_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [nil]
    def get_device_session_data_zip_using_get(device_session_id, opts = {})
      get_device_session_data_zip_using_get_with_http_info(device_session_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_data_zip_using_get_with_http_info(device_session_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_data_zip_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_data_zip_using_get"
      end
      # resource path
      local_var_path = '/api/v2/device-sessions/{deviceSessionId}/result-data.zip'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'projectId'] = opts[:'project_id'] if !opts[:'project_id'].nil?
      query_params[:'testRunId'] = opts[:'test_run_id'] if !opts[:'test_run_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_data_zip_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_device_session_data_zip_using_get1(device_session_id, run_id, opts = {})
      get_device_session_data_zip_using_get1_with_http_info(device_session_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_data_zip_using_get1_with_http_info(device_session_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_data_zip_using_get1 ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_data_zip_using_get1"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_device_session_data_zip_using_get1"
      end
      # resource path
      local_var_path = '/api/v2/runs/{runId}/device-sessions/{deviceSessionId}/result-data.zip'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_data_zip_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [nil]
    def get_device_session_junit_using_get(device_session_id, opts = {})
      get_device_session_junit_using_get_with_http_info(device_session_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_junit_using_get_with_http_info(device_session_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_junit_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_junit_using_get"
      end
      # resource path
      local_var_path = '/api/v2/device-sessions/{deviceSessionId}/junit.xml'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'projectId'] = opts[:'project_id'] if !opts[:'project_id'].nil?
      query_params[:'testRunId'] = opts[:'test_run_id'] if !opts[:'test_run_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_junit_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_device_session_junit_using_get1(device_session_id, run_id, opts = {})
      get_device_session_junit_using_get1_with_http_info(device_session_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_junit_using_get1_with_http_info(device_session_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_junit_using_get1 ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_junit_using_get1"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_device_session_junit_using_get1"
      end
      # resource path
      local_var_path = '/api/v2/runs/{runId}/device-sessions/{deviceSessionId}/junit.xml'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_junit_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [nil]
    def get_device_session_logs_using_get(device_session_id, opts = {})
      get_device_session_logs_using_get_with_http_info(device_session_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_logs_using_get_with_http_info(device_session_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_logs_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_logs_using_get"
      end
      # resource path
      local_var_path = '/api/v2/device-sessions/{deviceSessionId}/logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'projectId'] = opts[:'project_id'] if !opts[:'project_id'].nil?
      query_params[:'testRunId'] = opts[:'test_run_id'] if !opts[:'test_run_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_logs_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_device_session_logs_using_get1(device_session_id, run_id, opts = {})
      get_device_session_logs_using_get1_with_http_info(device_session_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_logs_using_get1_with_http_info(device_session_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_logs_using_get1 ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_logs_using_get1"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_device_session_logs_using_get1"
      end
      # resource path
      local_var_path = '/api/v2/runs/{runId}/device-sessions/{deviceSessionId}/logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_logs_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [nil]
    def get_device_session_performance_using_get(device_session_id, opts = {})
      get_device_session_performance_using_get_with_http_info(device_session_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :project_id projectId
    # @option opts [Integer] :test_run_id testRunId
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_performance_using_get_with_http_info(device_session_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_performance_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_performance_using_get"
      end
      # resource path
      local_var_path = '/api/v2/device-sessions/{deviceSessionId}/performance'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'projectId'] = opts[:'project_id'] if !opts[:'project_id'].nil?
      query_params[:'testRunId'] = opts[:'test_run_id'] if !opts[:'test_run_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_performance_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_device_session_performance_using_get1(device_session_id, run_id, opts = {})
      get_device_session_performance_using_get1_with_http_info(device_session_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_device_session_performance_using_get1_with_http_info(device_session_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_device_session_performance_using_get1 ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_device_session_performance_using_get1"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_device_session_performance_using_get1"
      end
      # resource path
      local_var_path = '/api/v2/runs/{runId}/device-sessions/{deviceSessionId}/performance'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_device_session_performance_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_project_cluster_logs_using_get(device_session_id, project_id, run_id, opts = {})
      get_project_cluster_logs_using_get_with_http_info(device_session_id, project_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_project_cluster_logs_using_get_with_http_info(device_session_id, project_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_project_cluster_logs_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_project_cluster_logs_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_project_cluster_logs_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_project_cluster_logs_using_get"
      end
      # resource path
      local_var_path = '/api/v2/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/cluster-logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_project_cluster_logs_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_project_device_session_data_zip_using_get(device_session_id, project_id, run_id, opts = {})
      get_project_device_session_data_zip_using_get_with_http_info(device_session_id, project_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_project_device_session_data_zip_using_get_with_http_info(device_session_id, project_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_project_device_session_data_zip_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_project_device_session_data_zip_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_project_device_session_data_zip_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_project_device_session_data_zip_using_get"
      end
      # resource path
      local_var_path = '/api/v2/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/result-data.zip'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_project_device_session_data_zip_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_project_device_session_junit_using_get(device_session_id, project_id, run_id, opts = {})
      get_project_device_session_junit_using_get_with_http_info(device_session_id, project_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_project_device_session_junit_using_get_with_http_info(device_session_id, project_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_project_device_session_junit_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_project_device_session_junit_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_project_device_session_junit_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_project_device_session_junit_using_get"
      end
      # resource path
      local_var_path = '/api/v2/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/junit.xml'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_project_device_session_junit_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_project_device_session_logs_using_get(device_session_id, project_id, run_id, opts = {})
      get_project_device_session_logs_using_get_with_http_info(device_session_id, project_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_project_device_session_logs_using_get_with_http_info(device_session_id, project_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_project_device_session_logs_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_project_device_session_logs_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_project_device_session_logs_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_project_device_session_logs_using_get"
      end
      # resource path
      local_var_path = '/api/v2/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_project_device_session_logs_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_project_device_session_performance_using_get(device_session_id, project_id, run_id, opts = {})
      get_project_device_session_performance_using_get_with_http_info(device_session_id, project_id, run_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_project_device_session_performance_using_get_with_http_info(device_session_id, project_id, run_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_project_device_session_performance_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_project_device_session_performance_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_project_device_session_performance_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_project_device_session_performance_using_get"
      end
      # resource path
      local_var_path = '/api/v2/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/performance'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_project_device_session_performance_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_user_cluster_logs_using_get(device_session_id, project_id, run_id, user_id, opts = {})
      get_user_cluster_logs_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_user_cluster_logs_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_user_cluster_logs_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_user_cluster_logs_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_user_cluster_logs_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_user_cluster_logs_using_get"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DeprecatedApi.get_user_cluster_logs_using_get"
      end
      # resource path
      local_var_path = '/api/v2/users/{userId}/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/cluster-logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s).sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_user_cluster_logs_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_user_device_session_data_zip_using_get(device_session_id, project_id, run_id, user_id, opts = {})
      get_user_device_session_data_zip_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_user_device_session_data_zip_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_user_device_session_data_zip_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_user_device_session_data_zip_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_user_device_session_data_zip_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_user_device_session_data_zip_using_get"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DeprecatedApi.get_user_device_session_data_zip_using_get"
      end
      # resource path
      local_var_path = '/api/v2/users/{userId}/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/result-data.zip'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s).sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_user_device_session_data_zip_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_user_device_session_junit_using_get(device_session_id, project_id, run_id, user_id, opts = {})
      get_user_device_session_junit_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_user_device_session_junit_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_user_device_session_junit_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_user_device_session_junit_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_user_device_session_junit_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_user_device_session_junit_using_get"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DeprecatedApi.get_user_device_session_junit_using_get"
      end
      # resource path
      local_var_path = '/api/v2/users/{userId}/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/junit.xml'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s).sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_user_device_session_junit_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_user_device_session_logs_using_get(device_session_id, project_id, run_id, user_id, opts = {})
      get_user_device_session_logs_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_user_device_session_logs_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_user_device_session_logs_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_user_device_session_logs_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_user_device_session_logs_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_user_device_session_logs_using_get"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DeprecatedApi.get_user_device_session_logs_using_get"
      end
      # resource path
      local_var_path = '/api/v2/users/{userId}/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/logs'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s).sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_user_device_session_logs_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_user_device_session_performance_using_get(device_session_id, project_id, run_id, user_id, opts = {})
      get_user_device_session_performance_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts)
      nil
    end

    # This endpoint is deprecated.
    # @param device_session_id deviceSessionId
    # @param project_id projectId
    # @param run_id runId
    # @param user_id userId
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_user_device_session_performance_using_get_with_http_info(device_session_id, project_id, run_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.get_user_device_session_performance_using_get ...'
      end
      # verify the required parameter 'device_session_id' is set
      if @api_client.config.client_side_validation && device_session_id.nil?
        fail ArgumentError, "Missing the required parameter 'device_session_id' when calling DeprecatedApi.get_user_device_session_performance_using_get"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling DeprecatedApi.get_user_device_session_performance_using_get"
      end
      # verify the required parameter 'run_id' is set
      if @api_client.config.client_side_validation && run_id.nil?
        fail ArgumentError, "Missing the required parameter 'run_id' when calling DeprecatedApi.get_user_device_session_performance_using_get"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DeprecatedApi.get_user_device_session_performance_using_get"
      end
      # resource path
      local_var_path = '/api/v2/users/{userId}/projects/{projectId}/runs/{runId}/device-sessions/{deviceSessionId}/performance'.sub('{' + 'deviceSessionId' + '}', device_session_id.to_s).sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'runId' + '}', run_id.to_s).sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeyInHeader', 'oAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#get_user_device_session_performance_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
