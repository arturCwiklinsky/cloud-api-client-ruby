=begin
#BitbarCloud API

#BitbarCloud API.

OpenAPI spec version: 2.100.0
Contact: damian.sniezek@smartbear.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::NotificationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NotificationsApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::NotificationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NotificationsApi' do
    it 'should create an instance of NotificationsApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::NotificationsApi)
    end
  end

  # unit tests for create_user_notification_using_post
  # Create notification.
  # @param channel channel
  # @param destination destination
  # @param scope scope
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [APINotification]
  describe 'create_user_notification_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_notification_email_using_delete
  # Delete notification.
  # @param id id
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_notification_email_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channels_using_get1
  # Get notification channels.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIEnum]
  describe 'get_channels_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scopes_using_get1
  # Get notification scopes.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIEnum]
  describe 'get_scopes_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_notification_using_get
  # Get notification.
  # @param id id
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APINotification]
  describe 'get_user_notification_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_notifications_using_get
  # Get notifications.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;scope_eq_all&lt;br&gt;filter&#x3D;channel_eq_slack&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;scope_a&lt;br&gt;sort&#x3D;channel_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPINotification]
  describe 'get_user_notifications_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_user_notification_using_post
  # Test notification.
  # @param id id
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APIMessage]
  describe 'test_user_notification_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_notification_using_post
  # Update notification.
  # @param id id
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :destination destination
  # @option opts [String] :scope scope
  # @return [APINotification]
  describe 'update_user_notification_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
