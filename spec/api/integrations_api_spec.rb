=begin
#BitbarCloud API

#BitbarCloud API.

OpenAPI spec version: 2.87.0
Contact: support@bitbar.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::IntegrationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'IntegrationsApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::IntegrationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IntegrationsApi' do
    it 'should create an instance of IntegrationsApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::IntegrationsApi)
    end
  end

  # unit tests for create_issue_using_post
  # Create jira issue.
  # @param issue_type_id issueTypeId
  # @param project_key projectKey
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description description
  # @option opts [Integer] :priority_id priorityId
  # @option opts [String] :summary summary
  # @return [APIJiraIssue]
  describe 'create_issue_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_users_integration_using_post
  # Create integration.
  # @param type type
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_key apiKey
  # @option opts [File] :cert cert
  # @option opts [String] :password password
  # @option opts [String] :url url
  # @option opts [String] :username username
  # @return [APIUserIntegration]
  describe 'create_users_integration_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_issue_using_delete
  # Delete jira issue.
  # @param issue_key issueKey
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_issue_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_users_integration_using_delete
  # Delete integration.
  # @param id id
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_users_integration_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_integrations_using_get
  # Get integrations.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1576134485398&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_gamebench&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a
  # @return [APIListOfAPIUserIntegration]
  describe 'get_integrations_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_issue_types_using_get
  # Get jira issue types.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIJiraIssueType]
  describe 'get_issue_types_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_issue_using_get
  # Get jira issue.
  # @param issue_key issueKey
  # @param [Hash] opts the optional parameters
  # @return [APIJiraIssue]
  describe 'get_issue_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_issues_using_get
  # Get jira issues.
  # @param project_key projectKey
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIJiraIssue]
  describe 'get_issues_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_priorities_using_get
  # Get jira issue priorities.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIJiraPriority]
  describe 'get_priorities_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_using_get
  # Get jira projects.
  # @param project_key projectKey
  # @param [Hash] opts the optional parameters
  # @return [APIJiraProject]
  describe 'get_project_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_projects_using_get
  # Get jira projects.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIBasicJiraProject]
  describe 'get_projects_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_server_info_using_get
  # Get jira server info and validate connection.
  # @param [Hash] opts the optional parameters
  # @return [APIJiraServerInfo]
  describe 'get_server_info_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_issue_using_post
  # Update jira issue.
  # @param comment comment
  # @param issue_key issueKey
  # @param [Hash] opts the optional parameters
  # @return [APIJiraIssue]
  describe 'update_issue_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
