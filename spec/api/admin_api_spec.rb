=begin
#BitbarCloud API

#BitbarCloud API.

OpenAPI spec version: 2.100.0
Contact: damian.sniezek@smartbear.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::AdminApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AdminApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::AdminApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdminApi' do
    it 'should create an instance of AdminApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::AdminApi)
    end
  end

  # unit tests for abort_project_test_run_using_post
  # Abort test run and receive partial results.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'abort_project_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_test_run_using_post
  # Abort test run and receive partial results.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIAdminTestRun]
  describe 'abort_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_test_run_using_post1
  # Abort test run and receive partial results.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [APITestRun]
  describe 'abort_test_run_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate_license_using_post
  # Activate license.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'activate_license_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate_service_using_post
  # Activate service.
  # @param service_id serviceId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activate_time activateTime
  # @return [APIService]
  describe 'activate_service_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate_user_service_using_post
  # Activate account service.
  # @param account_service_id accountServiceId
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'activate_user_service_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_cleanup_configuration_using_post
  # Add device specific cleanup configuration.
  # @param device_cleanup_configuration_id deviceCleanupConfigurationId
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'add_device_cleanup_configuration_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_label_using_post
  # Add label to device.
  # @param device_id deviceId
  # @param label_id labelId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'add_device_label_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_label_using_post1
  # Add label to device.
  # @param device_id deviceId
  # @param label_id labelId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'add_device_label_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_model_criteria_using_post
  # Create device model criterion.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :field field
  # @option opts [Integer] :label_group_id labelGroupId
  # @return [nil]
  describe 'add_device_model_criteria_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_to_device_group_using_post
  # Add device to device group.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_id deviceId
  # @option opts [Array<Integer>] :device_ids deviceIds[]
  # @return [APIDeviceGroup]
  describe 'add_device_to_device_group_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file_using_post
  # Add file to device session.
  # @param device_session_id deviceSessionId
  # @param file file
  # @param name name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag tag
  # @return [APIUserFile]
  describe 'add_file_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_project_test_run_tag_using_post
  # Add tag to test run.
  # @param name name
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'add_project_test_run_tag_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_role_to_account_using_post
  # Add account role.
  # @param role_id roleId
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :expire_time expireTime
  # @option opts [Integer] :value value
  # @return [APIRole]
  describe 'add_role_to_account_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_selector_to_device_group_using_post
  # Add selectors to device group.
  # @param device_group_id deviceGroupId
  # @param selector_ids selectorIds[]
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceGroup]
  describe 'add_selector_to_device_group_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_service_to_user_using_post
  # Add service to user.
  # @param service_id serviceId
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count count
  # @return [APIAccountService]
  describe 'add_service_to_user_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_test_run_tag_using_post
  # Add tag to test run.
  # @param name name
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [APITag]
  describe 'add_test_run_tag_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_user_using_post
  # Add user to access group.
  # @param access_group_id accessGroupId
  # @param email email
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'add_user_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for archive_service_using_delete
  # Archive service.
  # @param service_id serviceId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive_service_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ban_application_using_post
  # Create property banning application.
  # @param test_run_id testRunId
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'ban_application_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ban_email_domain_using_post
  # Create property banning email domain.
  # @param email email
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'ban_email_domain_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for blink_using_post
  # Start blinking device screen.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [APIAdminDevice]
  describe 'blink_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for check_notification_plan_using_get
  # Check potential notifications generated by notification plan.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;scope_eq_all&lt;br&gt;filter&#x3D;channel_eq_slack&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;scope_a&lt;br&gt;sort&#x3D;channel_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPINotification]
  describe 'check_notification_plan_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_device_cleanup_configuration_using_post
  # Create device cleanup configuration.
  # @param content content
  # @param discriminator discriminator
  # @param os_type osType
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :enabled enabled
  # @return [APIDeviceCleanupConfiguration]
  describe 'create_device_cleanup_configuration_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_device_session_connection_using_post
  # Create connection for device session.
  # @param device_session_id deviceSessionId
  # @param host host
  # @param port port
  # @param type type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :password password
  # @return [APIConnection]
  describe 'create_device_session_connection_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_file_property_using_post
  # Create file property.
  # @param file_id fileId
  # @param key key
  # @param value value
  # @param [Hash] opts the optional parameters
  # @return [APIUserFileProperty]
  describe 'create_file_property_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_framework_using_post
  # Create framework.
  # @param content content
  # @param name name
  # @param os_type osType
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :account_id accountId
  # @option opts [BOOLEAN] :add_label_to_devices addLabelToDevices
  # @option opts [BOOLEAN] :can_run_from_ui canRunFromUI
  # @option opts [String] :description description
  # @option opts [String] :documentation_url documentationUrl
  # @option opts [BOOLEAN] :for_projects forProjects
  # @option opts [String] :icon icon
  # @option opts [Integer] :label_id labelId
  # @option opts [String] :required_app_extensions requiredAppExtensions
  # @option opts [String] :required_test_extensions requiredTestExtensions
  # @option opts [String] :required_test_file_tags requiredTestFileTags
  # @option opts [BOOLEAN] :retryable retryable
  # @option opts [Array<Integer>] :role_ids roleIds[]
  # @option opts [Integer] :sample_app_id sampleAppId
  # @option opts [Integer] :sample_test_id sampleTestId
  # @option opts [BOOLEAN] :skip_older_sdk skipOlderSdk
  # @option opts [BOOLEAN] :skip_queue skipQueue
  # @option opts [String] :type type
  # @return [APIFramework]
  describe 'create_framework_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_label_group_using_post
  # Create label group.
  # @param display_name displayName
  # @param name name
  # @param [Hash] opts the optional parameters
  # @return [APILabelGroup]
  describe 'create_label_group_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_label_using_post
  # Add label to label group.
  # @param display_name displayName
  # @param group_id groupId
  # @param name name
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'create_label_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_license_using_post
  # Create license.
  # @param unit unit
  # @param unit_count unitCount
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :android_device_limit androidDeviceLimit
  # @option opts [BOOLEAN] :android_enabled androidEnabled
  # @option opts [Integer] :android_project_limit androidProjectLimit
  # @option opts [BOOLEAN] :build_enabled buildEnabled
  # @option opts [Integer] :build_limit buildLimit
  # @option opts [Integer] :desktop_device_limit desktopDeviceLimit
  # @option opts [BOOLEAN] :desktop_enabled desktopEnabled
  # @option opts [Integer] :desktop_project_limit desktopProjectLimit
  # @option opts [Integer] :global_device_limit globalDeviceLimit
  # @option opts [Integer] :global_project_limit globalProjectLimit
  # @option opts [BOOLEAN] :inspector_enabled inspectorEnabled
  # @option opts [Integer] :ios_device_limit iosDeviceLimit
  # @option opts [BOOLEAN] :ios_enabled iosEnabled
  # @option opts [Integer] :ios_project_limit iosProjectLimit
  # @option opts [BOOLEAN] :private_instance privateInstance
  # @return [APILicense]
  describe 'create_license_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_notification_plan_using_post
  # Create notification plan.
  # @param channel channel
  # @param name name
  # @param notification_content notificationContent
  # @param notification_subject notificationSubject
  # @param scope scope
  # @param [Hash] opts the optional parameters
  # @return [APINotificationPlan]
  describe 'create_notification_plan_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_property_using_post
  # Create property.
  # @param description description
  # @param name name
  # @param value value
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from_time fromTime
  # @option opts [Integer] :to_time toTime
  # @return [APIProperty]
  describe 'create_property_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_service_using_post
  # Create or update the service.
  # @param body body
  # @param [Hash] opts the optional parameters
  # @return [APIService]
  describe 'create_service_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user_using_post
  # Create user.
  # @param email email
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'create_user_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_using_post
  # Create access group.
  # @param name name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope scope
  # @option opts [Integer] :user_id userId
  # @return [APIAccessGroup]
  describe 'create_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_using_post2
  # Create country vat rate.
  # @param country_code countryCode
  # @param vat_rate vatRate
  # @param [Hash] opts the optional parameters
  # @return [APICountryVatRate]
  describe 'create_using_post2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deactivate_license_using_post
  # Deactivate license.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'deactivate_license_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deactivate_user_service_using_post
  # Deactivate account service.
  # @param account_service_id accountServiceId
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'deactivate_user_service_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cluster_using_delete
  # Delete cluster.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_cluster_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_cleanup_configuration_using_delete
  # Delete device specific cleanup configuration.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_cleanup_configuration_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_from_device_group_using_delete
  # Delete device from device group.
  # @param device_group_id deviceGroupId
  # @param device_model_id deviceModelId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_from_device_group_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_group_using_delete
  # Delete device group.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_group_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_label_using_delete
  # Delete label from device.
  # @param device_id deviceId
  # @param label_id labelId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_label_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_label_using_delete1
  # Delete label from device.
  # @param device_id deviceId
  # @param label_id labelId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_label_using_delete1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_model_criteria_using_delete
  # Delete device model criterion.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIMessage]
  describe 'delete_device_model_criteria_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_using_delete
  # Delete device.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file_property_using_delete
  # Delete file property.
  # @param file_id fileId
  # @param property_id propertyId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file_property_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file_using_delete
  # Delete sample file.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file_using_delete1
  # Delete file.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file_using_delete1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file_using_delete3
  # Delete file from device session.
  # @param device_session_id deviceSessionId
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file_using_delete3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_framework_using_delete
  # Delete framework.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_framework_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_label_group_using_delete
  # Delete label group.
  # @param group_id groupId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_label_group_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_label_using_delete
  # Delete label.
  # @param group_id groupId
  # @param label_id labelId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_label_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_license_using_delete
  # Delete license.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_license_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_notification_plan_using_delete
  # Delete notification plan.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_notification_plan_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project_test_run_using_delete
  # Delete test run.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_project_test_run_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project_using_delete
  # Delete project.
  # @param project_id projectId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_project_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_property_using_delete
  # Delete property.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_property_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_using_delete
  # Delete access group resource.
  # @param access_group_id accessGroupId
  # @param resource_id resourceId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_role_from_account_using_delete
  # Delete account role.
  # @param account_role_id accountRoleId
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_role_from_account_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_selector_from_device_group_using_delete
  # Delete selector from device group.
  # @param device_group_id deviceGroupId
  # @param selector_id selectorId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_selector_from_device_group_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_tag_using_delete
  # Delete test run tag.
  # @param run_id runId
  # @param tag_id tagId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [nil]
  describe 'delete_test_run_tag_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_tag_with_project_using_delete
  # Delete test run tag.
  # @param project_id projectId
  # @param run_id runId
  # @param tag_id tagId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_test_run_tag_with_project_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_using_delete
  # Delete test run.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_test_run_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_using_delete1
  # Delete test run.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [nil]
  describe 'delete_test_run_using_delete1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_test_runs_using_delete
  # Delete all user test runs.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_test_runs_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_using_delete
  # Delete access group user.
  # @param access_group_id accessGroupId
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_using_delete
  # Delete access group.
  # @param access_group_id accessGroupId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_using_delete2
  # Delete country vat rate.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_using_delete2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_user_using_delete
  # Disable user.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'disable_user_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_icon_file_using_get
  # Download icon of file.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_icon_file_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_license_using_get
  # Get license.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_license_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_output_files_zip_using_get
  # Get device session output files.zip.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_output_files_zip_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_test_run_output_files_zip_using_get
  # Get device session output files.zip.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_test_run_output_files_zip_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_test_run_output_files_zip_using_get1
  # Get device session output files.zip.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_test_run_output_files_zip_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_user_file_using_get
  # Download file.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :attachment attachment
  # @option opts [Integer] :height height
  # @option opts [Integer] :width width
  # @return [nil]
  describe 'download_user_file_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_user_using_post
  # Enable user.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'enable_user_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for execute_notification_plan_using_post
  # Send notifications basing on notification plan.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APINotificationPlan]
  describe 'execute_notification_plan_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_list_using_get
  # Get accounts.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1593583737870&lt;br&gt;filter&#x3D;mainuserfirstname_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;mainuserlastname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;mainUserFirstName_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;mainUserLastName_a
  # @return [APIListOfAPIAccount]
  describe 'get_account_list_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_roles_using_get
  # Get account roles.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_admin&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt;
  # @return [APIListOfAPIRole]
  describe 'get_account_roles_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_services_using_get
  # Get account services.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;deactivatereason_eq_initial_failure&lt;br&gt;filter&#x3D;price_eq_1&lt;br&gt;filter&#x3D;chargetype_eq_usage_mobile&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;active_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1593583738269&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583738269&lt;br&gt;filter&#x3D;activatedbyname_eq_value&lt;br&gt;filter&#x3D;servicename_eq_value&lt;br&gt;filter&#x3D;deactivatedbyname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;price_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;active_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;activatedByName_a&lt;br&gt;sort&#x3D;serviceName_a&lt;br&gt;sort&#x3D;deactivatedByName_a
  # @return [APIListOfAPIAccountService]
  describe 'get_account_services_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_using_get1
  # Get account.
  # @param account_id accountId
  # @param [Hash] opts the optional parameters
  # @return [APIAccount]
  describe 'get_account_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_activities_using_get
  # Get activities.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1593583738381&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;useragent_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;httpmethod_eq_get&lt;br&gt;filter&#x3D;body_eq_value&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;uri_eq_value&lt;br&gt;filter&#x3D;parameters_eq_value&lt;br&gt;filter&#x3D;deprecatedresource_eq_null
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;userAgent_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;httpMethod_a&lt;br&gt;sort&#x3D;body_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;uri_a&lt;br&gt;sort&#x3D;parameters_a&lt;br&gt;sort&#x3D;deprecatedResource_a
  # @return [APIListOfAPIActivity]
  describe 'get_activities_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_activities_using_get1
  # Get market shares.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_android_version&lt;br&gt;filter&#x3D;value_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;value_a
  # @return [APIListOfAPIMarketShare]
  describe 'get_activities_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_device_using_get
  # Get device.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [APIAdminDevice]
  describe 'get_admin_device_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_test_runs_using_get
  # Get device session statistics.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :days days
  # @return [APIAdminDeviceSessionStatistics]
  describe 'get_admin_test_runs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_test_runs_using_get1
  # Get test runs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;common_eq_null&lt;br&gt;filter&#x3D;createtime_eq_1593583743269&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;starttime_eq_1593583743269&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPIAdminTestRun]
  describe 'get_admin_test_runs_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_billing_periods_using_get
  # Get billing periods.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;additionalhoursprice_eq_1&lt;br&gt;filter&#x3D;mail_eq_value&lt;br&gt;filter&#x3D;totalprice_eq_1&lt;br&gt;filter&#x3D;startbillingperiod_eq_1593583738669&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;_endbillingperiod_eq_1593583738669&lt;br&gt;filter&#x3D;subscriptionend_eq_1593583738669&lt;br&gt;filter&#x3D;serviceprice_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583738669&lt;br&gt;filter&#x3D;subscriptionstart_eq_1593583738669&lt;br&gt;filter&#x3D;paid_eq_true&lt;br&gt;filter&#x3D;lastpaymentdate_eq_1593583738669&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;additionalhours_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;plan_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;additionalHoursPrice_a&lt;br&gt;sort&#x3D;mail_a&lt;br&gt;sort&#x3D;totalPrice_a&lt;br&gt;sort&#x3D;startBillingPeriod_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;_endBillingPeriod_a&lt;br&gt;sort&#x3D;subscriptionEnd_a&lt;br&gt;sort&#x3D;servicePrice_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;subscriptionStart_a&lt;br&gt;sort&#x3D;lastPaymentDate_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;additionalHours_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;paymentDate_a&lt;br&gt;sort&#x3D;additionalHoursPaymentDate_a&lt;br&gt;sort&#x3D;plan_a
  # @return [APIListOfAPIBillingPeriod]
  describe 'get_all_billing_periods_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_test_run_device_session_steps_using_get
  # Get device session steps of all device sessions in run.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIDeviceSessionStep]
  describe 'get_all_test_run_device_session_steps_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_test_run_device_session_steps_using_get1
  # Get device session steps of all device sessions in run.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIDeviceSessionStep]
  describe 'get_all_test_run_device_session_steps_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_property_using_get
  # Get property.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'get_api_property_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ban_application_using_get
  # Get property of banned application.
  # @param test_run_id testRunId
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'get_ban_application_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channels_using_get
  # Get notification channels.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIEnum]
  describe 'get_channels_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_by_id_using_get
  # Get cluster.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_devices withDevices
  # @return [APICluster]
  describe 'get_cluster_by_id_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_devices_using_get
  # Get cluster devices.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1593583738870&lt;br&gt;filter&#x3D;cluster.name_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;statetime_eq_1593583738870&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;fingerprint_eq_value&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;devicecleanupconfigurationid_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;locked_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;cluster.name_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;fingerprint_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIAdminDevice]
  describe 'get_cluster_devices_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_logs_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @return [nil]
  describe 'get_cluster_logs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_logs_using_get1
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_cluster_logs_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_clusters_using_get
  # Get clusters.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1593583738972&lt;br&gt;filter&#x3D;pluginversion_eq_value&lt;br&gt;filter&#x3D;statetime_eq_1593583738972&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;state_eq_offline&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;url_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;pluginVersion_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;url_a&lt;br&gt;sort&#x3D;enabled_a
  # @return [APIListOfAPICluster]
  describe 'get_clusters_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_criteria_using_get
  # Get device model criteria.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;id_a
  # @return [APIListOfAPIDeviceModelCriterion]
  describe 'get_criteria_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step_using_get
  # Get current device session step.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step_using_get1
  # Get current device session step.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step_using_get2
  # Get current device session step.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_cleanup_configuration_using_get
  # Get device cleanup configuration.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'get_device_cleanup_configuration_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_cleanup_configuration_using_get1
  # Get device specific cleanup configuration.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'get_device_cleanup_configuration_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_cleanup_configurations_using_get
  # Get device cleanup configurations.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createdbyemail_eq_value&lt;br&gt;filter&#x3D;lastmodificationtime_eq_1593583739276&lt;br&gt;filter&#x3D;createtime_eq_1593583739276&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;global_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;createdbyid_eq_1&lt;br&gt;filter&#x3D;content_eq_value&lt;br&gt;filter&#x3D;discriminator_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createdByEmail_a&lt;br&gt;sort&#x3D;lastModificationTime_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;global_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;createdById_a&lt;br&gt;sort&#x3D;content_a&lt;br&gt;sort&#x3D;discriminator_a
  # @return [APIListOfAPIDeviceCleanupConfiguration]
  describe 'get_device_cleanup_configurations_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_devices_using_get
  # Get device group devices.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;creditsprice_eq_1&lt;br&gt;filter&#x3D;online_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;device.archivetime_eq_1593583744173&lt;br&gt;filter&#x3D;locked_eq_true&lt;br&gt;filter&#x3D;enabled_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;creditsPrice_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;device.archiveTime_a&lt;br&gt;sort&#x3D;locked_a&lt;br&gt;sort&#x3D;enabled_a
  # @option opts [BOOLEAN] :with_properties withProperties
  # @return [APIListOfAPIDevice]
  describe 'get_device_group_devices_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_selectors_using_get
  # Get device group selectors.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @return [APIListOfAPIDeviceProperty]
  describe 'get_device_group_selectors_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_using_get
  # Get device group.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceGroup]
  describe 'get_device_group_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_groups_using_get
  # Get device groups.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @return [APIListOfAPIDeviceGroup]
  describe 'get_device_groups_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_labels_using_get
  # Get device labels.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @return [APIListOfAPIDeviceProperty]
  describe 'get_device_labels_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_labels_using_get1
  # Get device labels.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @return [APIListOfAPIDeviceProperty]
  describe 'get_device_labels_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_models_using_get
  # Get device models.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;total_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;online_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;enabled_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;total_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;online_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;enabled_a
  # @return [APIListOfAPIAdminDeviceModel]
  describe 'get_device_models_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_problems_using_get
  # Get device problems.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;clustername_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;clusterid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;deviceid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;clusterName_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;clusterId_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;deviceId_a
  # @return [APIListOfAPIAdminDeviceProblem]
  describe 'get_device_problems_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_queue_using_get
  # Get device queue.
  # Ignores sort value. Sorts by order in queue.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1593583740369&lt;br&gt;filter&#x3D;createtime_eq_1593583740369&lt;br&gt;filter&#x3D;startedbydisplayname_eq_value&lt;br&gt;filter&#x3D;devicemodel.id_eq_1&lt;br&gt;filter&#x3D;currentsteptype_eq_waiting&lt;br&gt;filter&#x3D;starttime_eq_1593583740369&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583740369&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;priority_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startedByDisplayName_a&lt;br&gt;sort&#x3D;deviceModel.id_a&lt;br&gt;sort&#x3D;currentStepType_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;priority_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;testRunName_a
  # @return [APIListOfAPIAdminDeviceSession]
  describe 'get_device_queue_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_connections_using_get
  # Get connections for device session.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;path_eq_value&lt;br&gt;filter&#x3D;password_eq_value&lt;br&gt;filter&#x3D;urlschema_eq_value&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;port_eq_null&lt;br&gt;filter&#x3D;createtime_eq_1593583743780&lt;br&gt;filter&#x3D;host_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583743780&lt;br&gt;filter&#x3D;type_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;path_a&lt;br&gt;sort&#x3D;password_a&lt;br&gt;sort&#x3D;urlSchema_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;port_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;host_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;type_a
  # @return [APIListOfAPIConnection]
  describe 'get_device_session_connections_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_data_zip_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @return [nil]
  describe 'get_device_session_data_zip_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_data_zip_using_get1
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_device_session_data_zip_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_history_using_get
  # Get device sessions.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1593583740472&lt;br&gt;filter&#x3D;createtime_eq_1593583740472&lt;br&gt;filter&#x3D;startedbydisplayname_eq_value&lt;br&gt;filter&#x3D;devicemodel.id_eq_1&lt;br&gt;filter&#x3D;currentsteptype_eq_waiting&lt;br&gt;filter&#x3D;starttime_eq_1593583740472&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583740472&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;priority_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startedByDisplayName_a&lt;br&gt;sort&#x3D;deviceModel.id_a&lt;br&gt;sort&#x3D;currentStepType_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;priority_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;testRunName_a
  # @return [APIListOfAPIAdminDeviceSession]
  describe 'get_device_session_history_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_junit_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @return [nil]
  describe 'get_device_session_junit_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_junit_using_get1
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_device_session_junit_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_logs_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @return [nil]
  describe 'get_device_session_logs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_logs_using_get1
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_device_session_logs_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_performance_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @return [nil]
  describe 'get_device_session_performance_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_performance_using_get1
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_device_session_performance_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshot_using_get
  # Get device session screenshot.
  # @param device_session_id deviceSessionId
  # @param screenshot_id screenshotId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :height height
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @option opts [Integer] :width width
  # @return [nil]
  describe 'get_device_session_screenshot_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshot_using_get1
  # Get device session screenshot.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param screenshot_id screenshotId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :height height
  # @option opts [Integer] :width width
  # @return [nil]
  describe 'get_device_session_screenshot_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshots_using_get
  # Get device session screenshots.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [Integer] :project_id projectId
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [Integer] :test_run_id testRunId
  # @return [APIListOfAPIScreenshot]
  describe 'get_device_session_screenshots_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshots_using_get1
  # Get device session screenshots.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIScreenshot]
  describe 'get_device_session_screenshots_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_step_using_get
  # Get device session step.
  # @param device_session_id deviceSessionId
  # @param device_session_step_id deviceSessionStepId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_device_session_step_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_step_using_get1
  # Get device session step.
  # @param device_session_id deviceSessionId
  # @param device_session_step_id deviceSessionStepId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_device_session_step_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_step_using_get2
  # Get device session step.
  # @param device_session_id deviceSessionId
  # @param device_session_step_id deviceSessionStepId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_device_session_step_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps_using_get
  # Get device session steps.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIDeviceSessionStep]
  describe 'get_device_session_steps_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps_using_get1
  # Get device session steps.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIDeviceSessionStep]
  describe 'get_device_session_steps_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps_using_get2
  # Get device session steps.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIDeviceSessionStep]
  describe 'get_device_session_steps_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps_with_params_using_get
  # Get device session steps.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;result_eq_passed&lt;br&gt;filter&#x3D;createtime_eq_1593583746576&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [Integer] :project_id projectId
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;result_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [Integer] :test_run_id testRunId
  # @return [APIListOfAPITestCaseRun]
  describe 'get_device_session_steps_with_params_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_test_case_runs_using_get
  # Get device session steps.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;result_eq_passed&lt;br&gt;filter&#x3D;createtime_eq_1593583746578&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;result_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPITestCaseRun]
  describe 'get_device_session_test_case_runs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_test_case_runs_using_get1
  # Get device session steps.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;result_eq_passed&lt;br&gt;filter&#x3D;createtime_eq_1593583746580&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;result_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPITestCaseRun]
  describe 'get_device_session_test_case_runs_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_using_get
  # Get device session.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :test_run_id testRunId
  # @return [APIDeviceSession]
  describe 'get_device_session_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_with_project_using_get
  # Get device session.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'get_device_session_with_project_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_with_run_using_get
  # Get device session.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'get_device_session_with_run_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_sessions_using_get
  # Get device sessions.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583743579&lt;br&gt;filter&#x3D;launchappduration_eq_1&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;starttime_eq_1593583743579&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583743579&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;testrunname_eq_null&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [Integer] :project_id projectId
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;launchAppDuration_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;testRunName_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPIDeviceSession]
  describe 'get_device_sessions_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_statuses_using_get
  # Get device statuses.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;tdsversion_eq_value&lt;br&gt;filter&#x3D;internalstorage_eq_1&lt;br&gt;filter&#x3D;alarmon_eq_true&lt;br&gt;filter&#x3D;externalstorage_eq_1&lt;br&gt;filter&#x3D;monitoringon_eq_true&lt;br&gt;filter&#x3D;devicetime_eq_1&lt;br&gt;filter&#x3D;ssid_eq_value&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;deviceid_eq_1&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;internetaccess_eq_true&lt;br&gt;filter&#x3D;emailaccount_eq_value&lt;br&gt;filter&#x3D;clustername_eq_value&lt;br&gt;filter&#x3D;bluetoothon_eq_true&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;mocklocationon_eq_true&lt;br&gt;filter&#x3D;batterylevel_eq_1&lt;br&gt;filter&#x3D;locationserviceon_eq_true&lt;br&gt;filter&#x3D;testexecuting_eq_true&lt;br&gt;filter&#x3D;screenlocked_eq_true&lt;br&gt;filter&#x3D;sdcardpresent_eq_true&lt;br&gt;filter&#x3D;aslon_eq_true&lt;br&gt;filter&#x3D;devicetimezone_eq_value&lt;br&gt;filter&#x3D;device.archivetime_eq_1593583740771&lt;br&gt;filter&#x3D;flashon_eq_true&lt;br&gt;filter&#x3D;tetheringon_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;tdsVersion_a&lt;br&gt;sort&#x3D;internalStorage_a&lt;br&gt;sort&#x3D;alarmOn_a&lt;br&gt;sort&#x3D;externalStorage_a&lt;br&gt;sort&#x3D;monitoringOn_a&lt;br&gt;sort&#x3D;deviceTime_a&lt;br&gt;sort&#x3D;ssid_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;deviceId_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;internetAccess_a&lt;br&gt;sort&#x3D;emailAccount_a&lt;br&gt;sort&#x3D;clusterName_a&lt;br&gt;sort&#x3D;bluetoothOn_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;mockLocationOn_a&lt;br&gt;sort&#x3D;batteryLevel_a&lt;br&gt;sort&#x3D;locationServiceOn_a&lt;br&gt;sort&#x3D;testExecuting_a&lt;br&gt;sort&#x3D;screenLocked_a&lt;br&gt;sort&#x3D;updateTime_a&lt;br&gt;sort&#x3D;sdcardPresent_a&lt;br&gt;sort&#x3D;aslOn_a&lt;br&gt;sort&#x3D;deviceTimeZone_a&lt;br&gt;sort&#x3D;device.archiveTime_a&lt;br&gt;sort&#x3D;flashOn_a&lt;br&gt;sort&#x3D;tetheringOn_a
  # @return [APIListOfAPIDeviceStatus]
  describe 'get_device_statuses_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_count_session_report_using_get
  # Get device time, counted testRuns and deviceSessions per day, user, project, deviceModel.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;starttime_eq_1593583740785&lt;br&gt;filter&#x3D;_endtime_eq_1593583740785&lt;br&gt;filter&#x3D;projectname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt;
  # @return [APIListOfAPIDeviceTimeCountSessionReportEntry]
  describe 'get_device_time_count_session_report_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_history_summary_using_get
  # Get device time summary.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;starttime_eq_1593583740973&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583740973&lt;br&gt;filter&#x3D;username_eq_value&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [BOOLEAN] :for_whole_account forWholeAccount
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userName_a&lt;br&gt;sort&#x3D;type_a
  # @return [APIUserDeviceTimeSummary]
  describe 'get_device_time_history_summary_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_history_using_get
  # Get device time history.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;starttime_eq_1593583740967&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583740968&lt;br&gt;filter&#x3D;username_eq_value&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [BOOLEAN] :for_whole_account forWholeAccount
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userName_a&lt;br&gt;sort&#x3D;type_a
  # @return [APIListOfAPIUserDeviceTime]
  describe 'get_device_time_history_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_step_time_report_using_get
  # Get device preparing and waiting time per day, user, project, deviceModel.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;starttime_eq_1593583741070&lt;br&gt;filter&#x3D;_endtime_eq_1593583741070&lt;br&gt;filter&#x3D;projectname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt;
  # @return [APIListOfAPIDeviceTimeStepTimeReportEntry]
  describe 'get_device_time_step_time_report_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_type_using_get
  # Get device frame.
  # @param device_type_id deviceTypeId
  # @param [Hash] opts the optional parameters
  # @return [APIAdminDeviceType]
  describe 'get_device_type_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_types_using_get
  # Get device frames.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;imageprefix_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;imagePrefix_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIAdminDeviceType]
  describe 'get_device_types_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_devices_used_device_cleanup_configuration_using_get
  # Get devices used given device cleanup configuration.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1593583739279&lt;br&gt;filter&#x3D;cluster.name_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;statetime_eq_1593583739279&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;fingerprint_eq_value&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;devicecleanupconfigurationid_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;locked_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;cluster.name_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;fingerprint_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIAdminDevice]
  describe 'get_devices_used_device_cleanup_configuration_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_devices_using_get
  # Get devices.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1593583740372&lt;br&gt;filter&#x3D;cluster.name_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;statetime_eq_1593583740372&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;fingerprint_eq_value&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;devicecleanupconfigurationid_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;locked_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;cluster.name_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;fingerprint_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [BOOLEAN] :with_disabled withDisabled
  # @return [APIListOfAPIAdminDevice]
  describe 'get_devices_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_emails_using_get
  # Get emails.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1593583741171&lt;br&gt;filter&#x3D;subject_eq_value&lt;br&gt;filter&#x3D;lastretrytime_eq_1593583741171&lt;br&gt;filter&#x3D;channel_eq_slack&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;sent_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;subject_a&lt;br&gt;sort&#x3D;lastRetryTime_a&lt;br&gt;sort&#x3D;channel_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;sent_a
  # @return [APIListOfAPIAdminEmail]
  describe 'get_emails_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_errors_using_get
  # Get errors.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;quantity_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_abort_request&lt;br&gt;filter&#x3D;timestamp_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;quantity_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @return [APIListOfAPIAdminError]
  describe 'get_errors_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_properties_using_get
  # Get file properties.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;value_eq_value&lt;br&gt;filter&#x3D;key_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;id_a&lt;br&gt;sort&#x3D;value_a&lt;br&gt;sort&#x3D;key_a
  # @return [APIListOfAPIUserFileProperty]
  describe 'get_file_properties_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_property_using_get
  # Get file property.
  # @param file_id fileId
  # @param property_id propertyId
  # @param [Hash] opts the optional parameters
  # @return [APIUserFileProperty]
  describe 'get_file_property_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_tags_using_get
  # Get file tags.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIUserFileTag]
  describe 'get_file_tags_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_files_using_get
  # Get files.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583745674&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [Array<String>] :tag tag[]
  # @return [APIListOfAPIUserFile]
  describe 'get_files_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_available_labels_using_get
  # Get available framework labels.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @return [APIListOfAPIDeviceProperty]
  describe 'get_framework_available_labels_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_config_using_get
  # Get framework&#39;s config.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIProjectJobConfig]
  describe 'get_framework_config_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_roles_using_get
  # Get roles required by framework.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;name_eq_admin&lt;br&gt;filter&#x3D;id_eq_null
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIRole]
  describe 'get_framework_roles_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_statistics_using_get
  # Get framework statistics.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :days days
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;releaseversion_eq_value&lt;br&gt;filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;starttime_eq_1593583743171&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583743171
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;releaseVersion_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a
  # @return [APIListOfAPIAdminFrameworkStatistics]
  describe 'get_framework_statistics_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_using_get
  # Get framework.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIFramework]
  describe 'get_framework_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_frameworks_using_get
  # Get frameworks.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;retryable_eq_true&lt;br&gt;filter&#x3D;canrunfromui_eq_true&lt;br&gt;filter&#x3D;skipqueue_eq_true&lt;br&gt;filter&#x3D;forprojects_eq_true&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;type_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;labelid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583741677&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;jobconfigid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelname_eq_value&lt;br&gt;filter&#x3D;secured_eq_true&lt;br&gt;filter&#x3D;skipoldersdk_eq_true
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;retryable_a&lt;br&gt;sort&#x3D;canRunFromUI_a&lt;br&gt;sort&#x3D;skipQueue_a&lt;br&gt;sort&#x3D;forProjects_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;labelId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;jobConfigId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelName_a&lt;br&gt;sort&#x3D;secured_a&lt;br&gt;sort&#x3D;skipOlderSdk_a
  # @return [APIListOfAPIFramework]
  describe 'get_frameworks_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inspector_device_session_connection_using_get
  # Get connection for device session.
  # @param connection_id connectionId
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @return [APIConnection]
  describe 'get_inspector_device_session_connection_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_interactive_queue_using_get
  # Get manual sessions queue.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;deviceid_eq_1&lt;br&gt;filter&#x3D;billable_eq_true&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583741786&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;starttime_eq_1593583741786&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583741786
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;deviceModelName_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;deviceId_a&lt;br&gt;sort&#x3D;billable_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a
  # @return [APIListOfAPIAdminInteractiveDeviceSession]
  describe 'get_interactive_queue_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_license_using_get
  # Get license.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'get_license_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_license_using_get1
  # Get license installed to cloud.
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'get_license_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_licenses_using_get
  # Get licenses.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;expiretime_eq_1593583742072&lt;br&gt;filter&#x3D;closetime_eq_1593583742072&lt;br&gt;filter&#x3D;privateinstance_eq_true&lt;br&gt;filter&#x3D;activatetime_eq_1593583742072&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;status_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;expireTime_a&lt;br&gt;sort&#x3D;closeTime_a&lt;br&gt;sort&#x3D;privateInstance_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;status_a
  # @return [APIListOfAPILicense]
  describe 'get_licenses_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_list_using_get
  # Get access groups.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;scope_eq_user&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;scope_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @return [APIListOfAPIAccessGroup]
  describe 'get_list_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_list_using_get2
  # Get country vat rates.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;country_eq_value&lt;br&gt;filter&#x3D;countrycode_eq_value&lt;br&gt;filter&#x3D;vatrate_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;country_a&lt;br&gt;sort&#x3D;countryCode_a&lt;br&gt;sort&#x3D;vatRate_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPICountryVatRate]
  describe 'get_list_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_plan_using_get
  # Get notification plan.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APINotificationPlan]
  describe 'get_notification_plan_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_plans_using_get
  # Get notification plans.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1593583742471&lt;br&gt;filter&#x3D;scope_eq_all&lt;br&gt;filter&#x3D;handlerid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;channel_eq_slack&lt;br&gt;filter&#x3D;senttime_eq_1593583742471&lt;br&gt;filter&#x3D;updatetime_eq_1593583742471&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;handleremail_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;scope_a&lt;br&gt;sort&#x3D;handlerId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;channel_a&lt;br&gt;sort&#x3D;sentTime_a&lt;br&gt;sort&#x3D;updateTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;handlerEmail_a
  # @return [APIListOfAPINotificationPlan]
  describe 'get_notification_plans_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files_for_device_session_by_tag_using_get
  # Get device session output files.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583743378&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [Array<String>] :tag tag[]
  # @return [APIListOfAPIUserFile]
  describe 'get_output_files_for_device_session_by_tag_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files_for_device_session_by_tag_using_get1
  # Get device session output files.
  # @param device_session_id deviceSessionId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583743469&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [Array<String>] :tag tag[]
  # @return [APIListOfAPIUserFile]
  describe 'get_output_files_for_device_session_by_tag_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files_for_device_session_by_tag_using_get2
  # Get device session output files.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583745274&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [Array<String>] :tag tag[]
  # @return [APIListOfAPIUserFile]
  describe 'get_output_files_for_device_session_by_tag_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_cluster_logs_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_project_cluster_logs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_data_zip_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_project_device_session_data_zip_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_junit_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_project_device_session_junit_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_logs_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_project_device_session_logs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_performance_using_get
  # This endpoint is deprecated.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_project_device_session_performance_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_screenshot_using_get
  # Get device session screenshot.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param screenshot_id screenshotId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :height height
  # @option opts [Integer] :width width
  # @return [nil]
  describe 'get_project_device_session_screenshot_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_screenshots_using_get
  # Get device session screenshots.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIScreenshot]
  describe 'get_project_device_session_screenshots_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_sessions_using_get
  # Get device sessions.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583743584&lt;br&gt;filter&#x3D;launchappduration_eq_1&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;starttime_eq_1593583743584&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583743584&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;testrunname_eq_null&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;launchAppDuration_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;testRunName_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPIDeviceSession]
  describe 'get_project_device_sessions_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_test_run_tags_using_get
  # Get test run tags.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPITag]
  describe 'get_project_test_run_tags_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_test_run_with_project_using_get
  # Get test run.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'get_project_test_run_with_project_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_test_runs_using_get
  # Get test runs.
  # @param project_id projectId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;common_eq_null&lt;br&gt;filter&#x3D;createtime_eq_1593583747577&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;starttime_eq_1593583747577&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPITestRun]
  describe 'get_project_test_runs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_using_get1
  # Get project.
  # @param project_id projectId
  # @param [Hash] opts the optional parameters
  # @return [APIProject]
  describe 'get_project_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_projects_using_get1
  # Get projects.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1593583746467&lt;br&gt;filter&#x3D;common_eq_null&lt;br&gt;filter&#x3D;createtime_eq_1593583746467&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;readonly_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;sharedbyemail_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;sharedByEmail_a
  # @return [APIListOfAPIProject]
  describe 'get_projects_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_properties_using_get
  # Get properties.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;updatedbydisplayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;fromtime_eq_1593583742672&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;updatetime_eq_1593583742672&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;updatedbyid_eq_1&lt;br&gt;filter&#x3D;value_eq_value&lt;br&gt;filter&#x3D;totime_eq_1593583742672
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;updatedByDisplayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;fromTime_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;updateTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;updatedById_a&lt;br&gt;sort&#x3D;value_a&lt;br&gt;sort&#x3D;toTime_a
  # @return [APIListOfAPIProperty]
  describe 'get_properties_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_using_get
  # Get access group resource.
  # @param access_group_id accessGroupId
  # @param resource_id resourceId
  # @param [Hash] opts the optional parameters
  # @return [APISharedResource]
  describe 'get_resource_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resources_using_get
  # Get access group resources.
  # @param access_group_id accessGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;resourceid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;accessgroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_device_group
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;resourceId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @return [APIListOfAPISharedResource]
  describe 'get_resources_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_roles_using_get
  # Get roles.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [BOOLEAN] :without_priorities withoutPriorities
  # @return [APIListOfAPIRole]
  describe 'get_roles_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sample_files_using_get
  # Get sample files.
  # Sample files
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1593583742870&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;direction_a
  # @return [APIListOfAPIUserFile]
  describe 'get_sample_files_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scopes_using_get
  # Get notification scopes.
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIEnum]
  describe 'get_scopes_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_screenshot_names_using_get
  # Get screenshot names.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIScreenshot]
  describe 'get_screenshot_names_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_screenshot_names_using_get1
  # Get screenshot names.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIListOfAPIScreenshot]
  describe 'get_screenshot_names_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_service_using_get
  # Get service.
  # @param service_id serviceId
  # @param [Hash] opts the optional parameters
  # @return [APIService]
  describe 'get_service_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_services_using_get
  # Get services.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :active_only activeOnly
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1593583742981&lt;br&gt;filter&#x3D;includedhours_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;chargetype_eq_usage_mobile&lt;br&gt;filter&#x3D;priceperhour_eq_1&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;activatetime_eq_1593583742981&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;centprice_eq_1&lt;br&gt;filter&#x3D;customplan_eq_true&lt;br&gt;filter&#x3D;activated_eq_true
  # @option opts [BOOLEAN] :in_use inUse
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [BOOLEAN] :not_archived notArchived
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;includedHours_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;pricePerHour_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;centPrice_a&lt;br&gt;sort&#x3D;customPlan_a&lt;br&gt;sort&#x3D;activated_a
  # @return [APIListOfAPIService]
  describe 'get_services_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_settings_using_get
  # Get settings.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_vulnerable_data withVulnerableData
  # @return [Hash<String, Object>]
  describe 'get_settings_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_specific_device_cleanup_configuration_using_delete
  # Delete device cleanup configuration.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_specific_device_cleanup_configuration_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_specific_device_cleanup_configuration_using_get
  # Get specific device cleanup configuration.
  # @param serial_id serialId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'get_specific_device_cleanup_configuration_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_overview_using_get
  # Get overview status.
  # @param [Hash] opts the optional parameters
  # @return [APIAdminOverview]
  describe 'get_system_overview_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_data_availability_with_project_using_get
  # Get test run data availability.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APITestRunDataAvailability]
  describe 'get_test_run_data_availability_with_project_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_data_availability_with_test_run_using_get
  # Get test run data availability.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :user_id userId
  # @return [APITestRunDataAvailability]
  describe 'get_test_run_data_availability_with_test_run_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_screenshots_using_get
  # Get test run screenshots by name.
  # @param name name
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIScreenshotExtended]
  describe 'get_test_run_screenshots_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_screenshots_using_get1
  # Get test run screenshots by name.
  # @param name name
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPIScreenshotExtended]
  describe 'get_test_run_screenshots_using_get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tag_using_get
  # Get test run tag.
  # @param project_id projectId
  # @param run_id runId
  # @param tag_id tagId
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'get_test_run_tag_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tag_with_run_using_get
  # Get test run tag.
  # @param run_id runId
  # @param tag_id tagId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [APITag]
  describe 'get_test_run_tag_with_run_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tags_using_get
  # Get test run tags.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [Integer] :project_id projectId
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @return [APIListOfAPITag]
  describe 'get_test_run_tags_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_using_get
  # Get test run.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [APITestRun]
  describe 'get_test_run_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_runs_using_get
  # Get test runs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;common_eq_null&lt;br&gt;filter&#x3D;createtime_eq_1593583747580&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;starttime_eq_1593583747580&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;projectId_a
  # @return [APIListOfAPITestRun]
  describe 'get_test_runs_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_file_using_get
  # Get file.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'get_user_file_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_licenses_using_get
  # Get user licenses.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;expiretime_eq_1593583743276&lt;br&gt;filter&#x3D;closetime_eq_1593583743276&lt;br&gt;filter&#x3D;privateinstance_eq_true&lt;br&gt;filter&#x3D;activatetime_eq_1593583743276&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;status_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;expireTime_a&lt;br&gt;sort&#x3D;closeTime_a&lt;br&gt;sort&#x3D;privateInstance_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;status_a
  # @return [APIListOfAPILicense]
  describe 'get_user_licenses_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_service_using_get
  # Get account service.
  # @param account_service_id accountServiceId
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'get_user_service_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_services_using_get
  # Get account services.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;deactivatereason_eq_initial_failure&lt;br&gt;filter&#x3D;price_eq_1&lt;br&gt;filter&#x3D;chargetype_eq_usage_mobile&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;active_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1593583738274&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;_endtime_eq_1593583738274&lt;br&gt;filter&#x3D;activatedbyname_eq_value&lt;br&gt;filter&#x3D;servicename_eq_value&lt;br&gt;filter&#x3D;deactivatedbyname_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;price_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;active_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;activatedByName_a&lt;br&gt;sort&#x3D;serviceName_a&lt;br&gt;sort&#x3D;deactivatedByName_a
  # @return [APIListOfAPIAccountService]
  describe 'get_user_services_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_using_get
  # Get access group user.
  # @param access_group_id accessGroupId
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_using_get
  # Get access group users.
  # @param access_group_id accessGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;accessgroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a
  # @return [APIListOfAPIUser]
  describe 'get_users_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_using_get2
  # Get users.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;country_eq_value&lt;br&gt;filter&#x3D;code_eq_value&lt;br&gt;filter&#x3D;address_eq_value&lt;br&gt;filter&#x3D;lastlaunchedtesttime_eq_1593583748374&lt;br&gt;filter&#x3D;city_eq_value&lt;br&gt;filter&#x3D;vatid_eq_value&lt;br&gt;filter&#x3D;timezone_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;lastlogintime_eq_1593583748374&lt;br&gt;filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;serviceids_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;phone_eq_value&lt;br&gt;filter&#x3D;deletetime_eq_1593583748374&lt;br&gt;filter&#x3D;createtime_eq_1593583748374&lt;br&gt;filter&#x3D;accountserviceids_eq_1&lt;br&gt;filter&#x3D;organization_eq_value&lt;br&gt;filter&#x3D;ismainuser_eq_true&lt;br&gt;filter&#x3D;state_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value&lt;br&gt;filter&#x3D;status_eq_inactive
  # @option opts [Integer] :limit limit parameter define page size
  # @option opts [Integer] :offset offset parameter define page number
  # @option opts [BOOLEAN] :only_main_users onlyMainUsers
  # @option opts [BOOLEAN] :only_with_disabled_services onlyWithDisabledServices
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;country_a&lt;br&gt;sort&#x3D;code_a&lt;br&gt;sort&#x3D;address_a&lt;br&gt;sort&#x3D;lastLaunchedTestTime_a&lt;br&gt;sort&#x3D;city_a&lt;br&gt;sort&#x3D;vatId_a&lt;br&gt;sort&#x3D;timeZone_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;lastLoginTime_a&lt;br&gt;sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;serviceIds_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;phone_a&lt;br&gt;sort&#x3D;deleteTime_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;accountServiceIds_a&lt;br&gt;sort&#x3D;organization_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a&lt;br&gt;sort&#x3D;status_a
  # @option opts [String] :with_role withRole
  # @option opts [BOOLEAN] :with_roles withRoles
  # @return [APIListOfAPIUser]
  describe 'get_users_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_using_get
  # Get access group.
  # @param access_group_id accessGroupId
  # @param [Hash] opts the optional parameters
  # @return [APIAccessGroup]
  describe 'get_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_using_get2
  # Get country vat rate.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APICountryVatRate]
  describe 'get_using_get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mark_billing_period_as_paid_using_post
  # Mark billing period as paid.
  # @param billing_period_id billingPeriodId
  # @param [Hash] opts the optional parameters
  # @return [APIBillingPeriod]
  describe 'mark_billing_period_as_paid_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_device_session_using_post
  # Release device session.
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'release_device_session_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_build_logs_using_post
  # Generate build logs zip.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APIUserFile]
  describe 'request_project_test_run_build_logs_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_files_using_post
  # Generate files zip.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APIUserFile]
  describe 'request_project_test_run_files_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_logs_using_post
  # Generate logs zip.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APIUserFile]
  describe 'request_project_test_run_logs_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_performance_using_post
  # Generate performance zip.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APIUserFile]
  describe 'request_project_test_run_performance_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_screenshots_using_post
  # Generate screenshot zip.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APIUserFile]
  describe 'request_project_test_run_screenshots_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_build_logs_using_post
  # Generate build logs zip.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :user_id userId
  # @return [APIUserFile]
  describe 'request_test_run_build_logs_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_files_using_post
  # Generate files zip.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :user_id userId
  # @return [APIUserFile]
  describe 'request_test_run_files_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_logs_using_post
  # Generate logs zip.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :user_id userId
  # @return [APIUserFile]
  describe 'request_test_run_logs_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_performance_using_post
  # Generate performance zip.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :user_id userId
  # @return [APIUserFile]
  describe 'request_test_run_performance_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_screenshots_using_post
  # Generate screenshot zip.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @option opts [Integer] :project_id projectId
  # @option opts [Integer] :user_id userId
  # @return [APIUserFile]
  describe 'request_test_run_screenshots_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_activation_email_using_post
  # Resend activation email.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'resend_activation_email_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_activation_email_using_post1
  # Resend activation email to additional user.
  # @param additional_user_id additionalUserId
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'resend_activation_email_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_email_using_post
  # Resend email.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIAdminEmail]
  describe 'resend_email_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_license_using_post
  # Resend license.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'resend_license_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_device_session_using_post
  # Retry device session.
  # @param device_session_id deviceSessionId
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'retry_device_session_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run_using_post
  # Retry test run or its device sessions.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APIAdminTestRun]
  describe 'retry_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run_with_project_using_post
  # Retry test run or its device sessions.
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @return [APITestRun]
  describe 'retry_test_run_with_project_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run_with_test_run_using_post
  # Retry test run or its device sessions.
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids deviceRunIds[]
  # @option opts [Integer] :project_id projectId
  # @return [APITestRun]
  describe 'retry_test_run_with_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rollback_framework_config_using_delete
  # Rollback framework&#39;s config.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIProjectJobConfig]
  describe 'rollback_framework_config_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_test_run_using_post
  # Run test run.
  # @param configuration configuration
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'run_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_billable_flag_using_post
  # Change billable status for device session.
  # @param billable billable
  # @param device_session_id deviceSessionId
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'set_billable_flag_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_billable_flag_using_post1
  # Change billable status.
  # @param billable billable
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIAdminTestRun]
  describe 'set_billable_flag_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_priority_using_post
  # Change priority.
  # @param priority priority
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APIAdminTestRun]
  describe 'set_priority_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_device_group_using_post
  # Share device group.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id accessGroupId
  # @option opts [String] :email email
  # @return [APIListOfAPISharedResource]
  describe 'share_device_group_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_file_using_post
  # Share file.
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id accessGroupId
  # @option opts [String] :email email
  # @return [APIListOfAPISharedResource]
  describe 'share_file_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_project_using_post
  # Share project.
  # @param project_id projectId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id accessGroupId
  # @option opts [String] :email email
  # @return [APIListOfAPISharedResource]
  describe 'share_project_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_notification_plan_using_post
  # Test notifications basing on notification plan by sending it to admin.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APINotificationPlan]
  describe 'test_notification_plan_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unarchive_project_using_post
  # Unarchive project.
  # @param project_id projectId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unarchive_project_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_api_label_using_post
  # Update label.
  # @param group_id groupId
  # @param label_id labelId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :display_name displayName
  # @option opts [String] :name name
  # @return [APIDeviceProperty]
  describe 'update_api_label_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cluster_using_post
  # Update cluster.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :enabled enabled
  # @option opts [String] :name name
  # @option opts [String] :url url
  # @return [APICluster]
  describe 'update_cluster_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_cleanup_configuration_using_post
  # Update device cleanup configuration.
  # @param content content
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :discriminator discriminator
  # @option opts [BOOLEAN] :enabled enabled
  # @return [APIDeviceCleanupConfiguration]
  describe 'update_device_cleanup_configuration_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_model_using_post
  # Update device model.
  # @param device_model_id deviceModelId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :api_level apiLevel
  # @option opts [Integer] :credits_price creditsPrice
  # @option opts [BOOLEAN] :enabled enabled
  # @option opts [String] :name name
  # @option opts [String] :release_version releaseVersion
  # @option opts [Integer] :type_id typeId
  # @return [APIDevice]
  describe 'update_device_model_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_picker_using_post
  # Update device picker filters.
  # @param device_picker devicePicker
  # @param [Hash] opts the optional parameters
  # @return [APIDevicePicker]
  describe 'update_device_picker_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_type_using_post
  # Update device frame.
  # @param device_type_id deviceTypeId
  # @param image_height imageHeight
  # @param image_left imageLeft
  # @param image_top imageTop
  # @param image_width imageWidth
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :frame_extra_width frameExtraWidth
  # @return [APIAdminDeviceType]
  describe 'update_device_type_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_using_post
  # Update device.
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :account_id accountId
  # @option opts [Integer] :api_level apiLevel
  # @option opts [BOOLEAN] :enabled enabled
  # @option opts [String] :init_step initStep
  # @option opts [String] :ip_address ipAddress
  # @option opts [String] :name name
  # @option opts [String] :release_version releaseVersion
  # @option opts [String] :serial_id serialId
  # @option opts [String] :unlock_gesture unlockGesture
  # @return [APIAdminDevice]
  describe 'update_device_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file_name_using_post
  # Update file name.
  # @param file_id fileId
  # @param name name
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'update_file_name_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file_property_using_post
  # Update file property.
  # @param file_id fileId
  # @param property_id propertyId
  # @param value value
  # @param [Hash] opts the optional parameters
  # @return [APIUserFileProperty]
  describe 'update_file_property_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_framework_config_using_post
  # Update framework&#39;s config.
  # @param content content
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [APIProjectJobConfig]
  describe 'update_framework_config_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_framework_using_post
  # Update framework.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :add_label_to_devices addLabelToDevices
  # @option opts [BOOLEAN] :can_run_from_ui canRunFromUI
  # @option opts [String] :description description
  # @option opts [String] :documentation_url documentationUrl
  # @option opts [BOOLEAN] :for_projects forProjects
  # @option opts [String] :icon icon
  # @option opts [Integer] :label_id labelId
  # @option opts [String] :name name
  # @option opts [String] :os_type osType
  # @option opts [String] :required_app_extensions requiredAppExtensions
  # @option opts [String] :required_test_extensions requiredTestExtensions
  # @option opts [String] :required_test_file_tags requiredTestFileTags
  # @option opts [BOOLEAN] :retryable retryable
  # @option opts [Array<Integer>] :role_ids roleIds[]
  # @option opts [Integer] :sample_app_id sampleAppId
  # @option opts [Integer] :sample_test_id sampleTestId
  # @option opts [BOOLEAN] :skip_older_sdk skipOlderSdk
  # @option opts [BOOLEAN] :skip_queue skipQueue
  # @option opts [String] :type type
  # @return [APIFramework]
  describe 'update_framework_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_label_group_using_post
  # Update label group.
  # @param group_id groupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :display_name displayName
  # @option opts [String] :name name
  # @return [APILabelGroup]
  describe 'update_label_group_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_notification_plan_using_post
  # Update notification plan.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name name
  # @option opts [String] :notification_content notificationContent
  # @option opts [String] :notification_subject notificationSubject
  # @option opts [String] :scope scope
  # @return [APINotificationPlan]
  describe 'update_notification_plan_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project_test_run_using_post
  # Update test run.
  # @param display_name displayName
  # @param project_id projectId
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'update_project_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project_using_post
  # Update project.
  # @param project_id projectId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :archiving_item_count archivingItemCount
  # @option opts [String] :archiving_strategy archivingStrategy
  # @option opts [BOOLEAN] :common common
  # @option opts [String] :description description
  # @option opts [String] :email email
  # @option opts [String] :name name
  # @option opts [BOOLEAN] :read_only readOnly
  # @return [APIProject]
  describe 'update_project_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_property_using_post
  # Update property.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :always_valid alwaysValid
  # @option opts [String] :description description
  # @option opts [Integer] :from_time fromTime
  # @option opts [String] :name name
  # @option opts [Integer] :to_time toTime
  # @option opts [String] :value value
  # @return [APIProperty]
  describe 'update_property_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_test_run_using_post
  # Update test run.
  # @param display_name displayName
  # @param run_id runId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id projectId
  # @return [APITestRun]
  describe 'update_test_run_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_device_group_using_post
  # Update device group.
  # @param device_group_id deviceGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :display_name displayName
  # @option opts [String] :name name
  # @option opts [String] :os_type osType
  # @return [APIDeviceGroup]
  describe 'update_user_device_group_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_file_using_post
  # Update file content.
  # @param file file
  # @param file_id fileId
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'update_user_file_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_users_main_account_using_post
  # Update users main account, switch main user.
  # @param user_id userId
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :account_id accountId
  # @return [APIUser]
  describe 'update_users_main_account_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_using_post
  # Update access group.
  # @param access_group_id accessGroupId
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name name
  # @option opts [String] :scope scope
  # @return [APIAccessGroup]
  describe 'update_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_using_post2
  # Update country vat rate.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :country_code countryCode
  # @option opts [Integer] :vat_rate vatRate
  # @return [APICountryVatRate]
  describe 'update_using_post2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file_using_post
  # Upload sample file.
  # @param file file
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'upload_file_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file_using_post1
  # Upload file.
  # @param file file
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :global global
  # @return [APIUserFile]
  describe 'upload_file_using_post1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_license_using_post
  # Upload license to cloud.
  # @param file file
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'upload_license_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_test_run_config_using_post
  # Validate test run configuration.
  # @param configuration configuration
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :include_device_groups includeDeviceGroups
  # @option opts [BOOLEAN] :include_devices includeDevices
  # @option opts [BOOLEAN] :include_frameworks includeFrameworks
  # @return [APITestRunConfig]
  describe 'validate_test_run_config_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
